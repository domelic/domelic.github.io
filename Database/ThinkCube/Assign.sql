DROP TABLE IF EXISTS Line_Totals;
DROP TABLE IF EXISTS Invoice_Lines;
DROP TABLE IF EXISTS Invoices;
DROP TABLE IF EXISTS Shipping_Terms;
DROP TABLE IF EXISTS Payment_Terms;
DROP TABLE IF EXISTS Shipping_Methods;
DROP TABLE IF EXISTS Jobs;
DROP TABLE IF EXISTS Salespersons;
DROP TABLE IF EXISTS Job_Types;
DROP TABLE IF EXISTS Customer_Details;
DROP TABLE IF EXISTS Customers;
DROP TABLE IF EXISTS Discounts;
DROP TABLE IF EXISTS Customer_Types;
DROP TABLE IF EXISTS Companies;
DROP TABLE IF EXISTS Contact_Lines;
DROP TABLE IF EXISTS Address_Lines;
DROP TABLE IF EXISTS Cities;
DROP TABLE IF EXISTS Provinces;
DROP TABLE IF EXISTS Countries;
DROP TABLE IF EXISTS Accounts;
DROP TABLE IF EXISTS Roles;
DROP TABLE IF EXISTS Product_Details;
DROP TABLE IF EXISTS Products;
DROP TABLE IF EXISTS Product_Versions;
DROP TABLE IF EXISTS Product_Types;

CREATE TABLE Product_Types (
id INTEGER NOT NULL,
Name VARCHAR(20) NOT NULL,
CONSTRAINT PK_Product_Type PRIMARY KEY (Id)
);

CREATE TABLE Product_Versions (
Id INTEGER NOT NULL,
Code NUMERIC (4, 2) NOT NULL,
CONSTRAINT PK_Product_Version PRIMARY KEY (Id)
);

CREATE TABLE Products (
Id INTEGER NOT NULL,
Description VARCHAR(30) NOT NULL,
CONSTRAINT PK_Product PRIMARY KEY (Id)
);

CREATE TABLE Product_Details (
Id INTEGER NOT NULL,
Product_Id INTEGER NOT NULL,
Product_Version_Id INTEGER NULL,
Product_Type_Id INTEGER NOT NULL,
SKU CHAR(4) NOT NULL,
UPC CHAR(12) NOT NULL,
Price NUMERIC(6, 2) NOT NULL,
CONSTRAINT PK_Product_Details PRIMARY KEY (Id),
CONSTRAINT FK1_Product_Id FOREIGN KEY (Product_Id) REFERENCES Products(Id),
CONSTRAINT FK2_Product_Version_Id FOREIGN KEY (Product_Version_Id) REFERENCES Product_Versions(Id),
CONSTRAINT FK3_Product_Type_Id FOREIGN KEY (Product_Type_Id) REFERENCES Product_Types(Id)
);

CREATE TABLE Roles (
Id INTEGER NOT NULL,
Name VARCHAR(20) NOT NULL,
CONSTRAINT PK_Roles PRIMARY KEY (Id)
);

CREATE TABLE Accounts (
Id INTEGER NOT NULL,
Username VARCHAR(30) NOT NULL,
Password VARCHAR(30) NOT NULL,
Role_Id INTEGER NULL,
CONSTRAINT PK_Accounts PRIMARY KEY (Id),
CONSTRAINT FK_Role_Id FOREIGN KEY (Role_Id) REFERENCES Roles(Id)
);

CREATE TABLE Countries (
Id INTEGER NOT NULL,
Name VARCHAR(30) NOT NULL,
CONSTRAINT PK_Countries PRIMARY KEY (Id)
);

CREATE TABLE Provinces (
Id INTEGER NOT NULL,
Country_Id INTEGER NOT NULL,
Name CHAR(2) NOT NULL,
CONSTRAINT PK_Provinces PRIMARY KEY (Id),
CONSTRAINT FK_Country_Id FOREIGN KEY (Country_Id) REFERENCES Countries(Id)
);

CREATE TABLE Cities (
Id INTEGER NOT NULL,
Province_Id INTEGER NOT NULL,
Name VARCHAR(30) NOT NULL,
CONSTRAINT PK_Cities PRIMARY KEY (Id),
CONSTRAINT FK_Province_Id FOREIGN KEY (Province_Id) REFERENCES Provinces(Id)
);

CREATE TABLE Address_Lines (
Id INTEGER NOT NULL,
Street VARCHAR(50) NOT NULL,
Suite VARCHAR(20) NULL,
City_Id INTEGER NOT NULL,
Postal_Code CHAR(6) NOT NULL,
CONSTRAINT PK_Address_Lines PRIMARY KEY (Id),
CONSTRAINT FK_City_Id FOREIGN KEY (City_Id) REFERENCES Cities(Id)
);

CREATE TABLE Contact_Lines (
Id INTEGER NOT NULL,
Phone VARCHAR(15) NOT NULL,
Fax VARCHAR(15) NULL,
Email VARCHAR(50) NOT NULL,
CONSTRAINT PK_Contact_Lines PRIMARY KEY (Id)
);

CREATE TABLE Companies (
Id INTEGER NOT NULL,
Name VARCHAR(40) NOT NULL,
Address_Line_Id INTEGER NOT NULL,
Contact_Line_Id INTEGER NOT NULL,
CONSTRAINT PK_Companies PRIMARY KEY (Id),
CONSTRAINT FK1_Address_Line_Id FOREIGN KEY (Address_Line_Id) REFERENCES Address_Lines(Id),
CONSTRAINT FK2_Contact_Line_Id FOREIGN KEY (Contact_Line_Id) REFERENCES Contact_Lines(Id)
);

CREATE TABLE Customer_Types (
Id INTEGER NOT NULL,
Name VARCHAR(20) NOT NULL,
CONSTRAINT PK_Customer_Types PRIMARY KEY (Id)
);

CREATE TABLE Discounts (
Id INTEGER NOT NULL,
Product_Detail_Id INTEGER NOT NULL,
Customer_Type_Id INTEGER NOT NULL,
Value INTEGER NOT NULL,
CONSTRAINT PK_Discounts PRIMARY KEY (Id),
CONSTRAINT FK1_Product_Detail_Id FOREIGN KEY (Product_Detail_Id) REFERENCES Product_Details(Id),
CONSTRAINT FK2_Customer_Type_Id FOREIGN KEY (Customer_Type_Id) REFERENCES Customer_Types(Id)
);

CREATE TABLE Customers (
Id INTEGER NOT NULL,
First_Name VARCHAR(30) NOT NULL,
Last_Name VARCHAR(30) NOT NULL,
Customer_Type_Id INTEGER NULL,
Company_Id INTEGER NOT NULL,
Account_Id INTEGER NOT NULL,
CONSTRAINT PK_Customers PRIMARY KEY (Id),
CONSTRAINT FK1_Customer_Type_Id FOREIGN KEY (Customer_Type_Id) REFERENCES Customer_Types(Id),
CONSTRAINT FK2_Company_Id FOREIGN KEY (Company_Id) REFERENCES Companies(Id),
CONSTRAINT FK3_Account_Id FOREIGN KEY (Account_Id) REFERENCES Accounts(Id)
);

CREATE TABLE Customer_Details (
Id INTEGER NOT NULL,
Customer_Id INTEGER NOT NULL,
Contact_Line_Id INTEGER NOT NULL,
Address_Line_Id INTEGER NOT NULL,
CONSTRAINT PK_Customer_Details PRIMARY KEY (Id),
CONSTRAINT FK1_Customer_Id FOREIGN KEY (Customer_Id) REFERENCES Customers(Id),
CONSTRAINT FK2_Contact_Line_Id FOREIGN KEY (Contact_Line_Id) REFERENCES Contact_Lines(Id),
CONSTRAINT FK3_Contact_Line_Id FOREIGN KEY (Address_Line_Id) REFERENCES Address_Lines(Id)
);

CREATE TABLE Job_Types (
Id INTEGER NOT NULL,
Description VARCHAR(30) NOT NULL,
CONSTRAINT PK_Job_Types PRIMARY KEY (Id)
);

CREATE TABLE Salespersons (
Id INTEGER NOT NULL,
First_Name VARCHAR(30) NOT NULL,
Last_Name VARCHAR(30) NOT NULL,
Contact_Line_Id INTEGER NULL,
Account_Id INTEGER NULL,
CONSTRAINT PK_Salespersons PRIMARY KEY (Id),
CONSTRAINT FK1_Contact_Line_Id FOREIGN KEY (Contact_Line_Id) REFERENCES Contact_Lines(Id),
CONSTRAINT FK2_Account_Id FOREIGN KEY (Account_Id) REFERENCES Accounts(Id)
);

CREATE TABLE Jobs (
Id INTEGER NOT NULL,
Salesperson_Id INTEGER NOT NULL,
Job_Type_Id INTEGER NOT NULL,
Cost NUMERIC(6, 2) NOT NULL,
Date_Entered TIMESTAMP NOT NULL,
Date_Completed TIMESTAMP NOT NULL,
Time_Worked TIME NOT NULL,
CONSTRAINT PK_Jobs PRIMARY KEY (Id),
CONSTRAINT FK1_Salesperson_Id FOREIGN KEY (Salesperson_Id) REFERENCES Salespersons(Id),
CONSTRAINT FK2_Job_Type_Id FOREIGN KEY (Job_Type_Id) REFERENCES Job_Types(Id)
);

CREATE TABLE Shipping_Methods (
Id INTEGER NOT NULL,
Method VARCHAR(10) NOT NULL,
CONSTRAINT PK_Shipping_Methods PRIMARY KEY (Id)
);

CREATE TABLE Payment_Terms (
Id INTEGER NOT NULL,
Term VARCHAR(10) NOT NULL,
CONSTRAINT PK_Payment_Terms PRIMARY KEY (Id)
);

CREATE TABLE Shipping_Terms (
Id INTEGER NOT NULL,
Term VARCHAR(10) NOT NULL,
CONSTRAINT PK_Shipping_Terms PRIMARY KEY (Id)
);

CREATE TABLE Invoices (
Id INTEGER NOT NULL,
Customer_Detail_Id INTEGER NOT NULL,
Billto_Customer_Detail_Id INTEGER NOT NULL,
Shipto_Customer_Detail_Id INTEGER NOT NULL,
Shipping_Method_Id INTEGER NOT NULL,
Shipping_Term_Id INTEGER NOT NULL,
Payment_Term_Id INTEGER NOT NULL,
Salesperson_Id INTEGER NOT NULL,
Job_Id INTEGER NULL,
Order_Date TIMESTAMP NOT NULL,
Delivery_Date DATE NOT NULL,
Due_Date DATE NOT NULL,
CONSTRAINT PK_Invoices PRIMARY KEY (Id),
CONSTRAINT FK1_Customer_Detail_Id FOREIGN KEY (Customer_Detail_Id) REFERENCES Customer_Details(Id),
CONSTRAINT FK2_Billto_Customer_Detail_Id FOREIGN KEY (Billto_Customer_Detail_Id) REFERENCES Customer_Details(Id),
CONSTRAINT FK3_Shipto_Customer_Detail_Id FOREIGN KEY (Shipto_Customer_Detail_Id) REFERENCES Customer_Details(Id),
CONSTRAINT FK4_Shipping_Method_Id FOREIGN KEY (Shipping_Method_Id) REFERENCES Shipping_Methods(Id),
CONSTRAINT FK5_Shipping_Term_Id FOREIGN KEY (Shipping_Term_Id) REFERENCES Shipping_Terms(Id),
CONSTRAINT FK6_Payment_Term_Id FOREIGN KEY (Payment_Term_Id) REFERENCES Payment_Terms(Id),
CONSTRAINT FK7_Salesperson_Id FOREIGN KEY (Salesperson_Id) REFERENCES Salespersons(Id),
CONSTRAINT FK8_Job_Id FOREIGN KEY (Job_Id) REFERENCES Jobs(Id)
);

CREATE TABLE Invoice_Lines (
Id INTEGER NOT NULL,
Invoice_Id INTEGER NOT NULL,
Product_Detail_Id INTEGER NOT NULL,
Quantity INTEGER NOT NULL,
Discount_Id INTEGER NOT NULL,
Line_Total NUMERIC(8, 2),
CONSTRAINT PK_Invoice_Line PRIMARY KEY (Id),
CONSTRAINT FK1_Invoice_Id FOREIGN KEY (Invoice_Id) REFERENCES Invoices(Id),
CONSTRAINT FK2_Product_Detail_Id FOREIGN KEY (Product_Detail_Id) REFERENCES Product_Details(Id),
CONSTRAINT FK3_Discount_Id FOREIGN KEY (Discount_Id) REFERENCES Discounts(Id)
);

CREATE TABLE Line_Totals (
Id INTEGER NOT NULL,
Invoice_Id INTEGER NOT NULL,
Total_Discount NUMERIC(6, 2) NOT NULL,
Subtotal NUMERIC(8, 2) NOT NULL,
HST NUMERIC(6, 2) NOT NULL,
Total NUMERIC(8, 2) NOT NULL,
CONSTRAINT PK_Line_Totals PRIMARY KEY (Id),
CONSTRAINT FK_Invoice_Id FOREIGN KEY (Invoice_Id) REFERENCES Invoices(Id)
);
